export module abc.graph.charlie;

export import abc.traits;
import abc.charlie;

namespace abc {

//template<typename T, int* const& I, double d, std::vector<int, A, "h\"i", '\n', 0, typename A::T, typename A::T::template T, typename decltype(auto(i).c.d<int>().a)::template T<int>> vec, typename A, int... Ts, template<class> class... Templ, std::same_as<int> I, auto const volatile avc>
cluster CharlieCluster
{
    charlie = Charlie

    [trait::Alice <-> trait::Charlie] .. <-> charlie
}

}
